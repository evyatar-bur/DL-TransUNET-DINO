{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Train_and_Test","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"dzUvNbF99s1U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644510072553,"user_tz":-120,"elapsed":5216,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"4d70f015-61e3-4a01-88be-c896bdf66db8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# This mounts your Google Drive to the Colab VM.\n","from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","### Change to current directory ###\n","path ='/content/drive/MyDrive/Deep_learning/project/TransUnet_copy/'\n","models_path ='/content/drive/MyDrive/Deep_learning/project/models/'\n"]},{"cell_type":"code","source":["%cd drive/MyDrive/Deep_learning/project/TransUnet_copy/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"djln73b1GU34","executionInfo":{"status":"ok","timestamp":1644510072555,"user_tz":-120,"elapsed":57,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"891e21bc-3b6e-4191-fecd-73345aafbf02"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Deep_learning/project/TransUnet_copy\n"]}]},{"cell_type":"code","source":["# Installs\n","!pip install ml_collections medpy\n","\n","# Imports\n","import os\n","import random\n","import numpy as np\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","from torch.nn.modules.loss import CrossEntropyLoss\n","from torch.utils.data import DataLoader\n","import torch.backends.cudnn as cudnn\n","from tqdm import tqdm\n","from utils.utils import DiceLoss\n","from torchvision import transforms\n","from networks.vit_seg_modeling import VisionTransformer as ViT_seg\n","from networks.vit_seg_modeling import CONFIGS as CONFIGS_ViT_seg\n","\n","# Set device\n","cuda = torch.cuda.is_available()\n","if cuda:\n","    device = torch.device('cuda:0')\n","else:\n","    device = torch.device('cpu')"],"metadata":{"id":"kr4hZ9eT-bmh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644510081446,"user_tz":-120,"elapsed":8929,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"7b140057-9408-44ef-d4f6-5c8bd33eb439"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: ml_collections in /usr/local/lib/python3.7/dist-packages (0.1.1)\n","Requirement already satisfied: medpy in /usr/local/lib/python3.7/dist-packages (0.4.0)\n","Requirement already satisfied: contextlib2 in /usr/local/lib/python3.7/dist-packages (from ml_collections) (0.5.5)\n","Requirement already satisfied: absl-py in /usr/local/lib/python3.7/dist-packages (from ml_collections) (1.0.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from ml_collections) (1.15.0)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from ml_collections) (3.13)\n","Requirement already satisfied: SimpleITK>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from medpy) (2.1.1)\n","Requirement already satisfied: numpy>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from medpy) (1.19.5)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from medpy) (1.4.1)\n"]}]},{"cell_type":"code","source":["# Hyper-Parameters\n","base_lr = 0.01\n","num_classes = 2\n","batch_size = 25\n","max_epoch = 1   #150\n","n_skip = 3\n","vit_name = 'R50-ViT-B_16'\n","vit_patches_size = 16\n","z_spacing = 1\n","deterministic = True\n","\n","\n","cudnn.benchmark = not deterministic\n","cudnn.deterministic = deterministic"],"metadata":{"id":"pAZEHZ4INpza"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Dataset Definitions\n","train_base_dir = '/content/drive/MyDrive/Deep_learning/project/data/train_npz_patches'\n","test_base_dir = '/content/drive/MyDrive/Deep_learning/project/data/test_npz_patches'\n","list_dir = path + 'lists/lists_Sartorius_patches/'\n","img_size = 224    # original image size [520, 704]\n","rand_seed = 1234"],"metadata":{"id":"U8MOy-6fQBPl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from datasets.dataset_sartorius import Sartorius_dataset, RandomGenerator\n","\n","db_train = Sartorius_dataset(base_dir=train_base_dir, list_dir=list_dir, split=\"train\",\n","                          transform=transforms.Compose(\n","                              [RandomGenerator(output_size=[img_size, img_size])]))\n","print(\"The length of train set is: {}\".format(len(db_train)))\n","\n","def worker_init_fn(worker_id):\n","    random.seed(rand_seed + worker_id)\n","\n","trainloader = DataLoader(db_train, batch_size=batch_size, shuffle=True, num_workers=1, pin_memory=True,\n","                        worker_init_fn=worker_init_fn)\n","\n","db_test = Sartorius_dataset(base_dir=test_base_dir, split=\"test\", list_dir=list_dir)\n","testloader = DataLoader(db_test, batch_size=batch_size, shuffle=False, num_workers=1,pin_memory=True, worker_init_fn=worker_init_fn) # batch_size = 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7PFrWk3QPZIX","executionInfo":{"status":"ok","timestamp":1644510081458,"user_tz":-120,"elapsed":54,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"563d7304-2bd0-4881-a33d-f8a52e782424"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The length of train set is: 6000\n"]}]},{"cell_type":"code","source":["def train_sartorius():\n","\n","    global train_loss_list, train_loss_ce_list, test_loss_list, test_loss_ce_list\n","\n","    # Create loss list for train/test plots\n","    train_loss_list = []\n","    train_loss_ce_list = []\n","    test_loss_list = []\n","    test_loss_ce_list = []\n","\n","    model.train()\n","    ce_loss = CrossEntropyLoss()\n","    dice_loss = DiceLoss(num_classes)\n","    optimizer = optim.SGD(model.parameters(), lr=base_lr, momentum=0.9, weight_decay=0.0001)\n","    iter_num = 0\n","    max_iterations = max_epoch * len(trainloader)  # max_epoch = max_iterations // len(trainloader) + 1\n","    print(f\"{len(trainloader)} iterations per epoch. {max_iterations} max iterations.\")\n","    best_performance = 0.0\n","    iterator = tqdm(range(max_epoch), ncols=70)\n","    for epoch_num in iterator:\n","        for i_batch, sampled_batch in enumerate(trainloader):\n","            image_batch, label_batch = sampled_batch['image'], sampled_batch['label']\n","            image_batch, label_batch = image_batch.cuda(), label_batch.cuda()\n","            outputs = model(image_batch)\n","            loss_ce = ce_loss(outputs, label_batch[:].long())\n","            loss_dice = dice_loss(outputs, label_batch, softmax=True)\n","            loss = 0.5 * loss_ce + 0.5 * loss_dice\n","            optimizer.zero_grad()\n","            loss.backward()\n","            optimizer.step()\n","            lr_ = base_lr * (1.0 - iter_num / max_iterations) ** 0.9\n","            for param_group in optimizer.param_groups:\n","                param_group['lr'] = lr_\n","\n","            iter_num = iter_num + 1\n","\n","            print(f\"iteration {iter_num} : loss : {loss.item()}, loss_ce: {loss_ce.item()}\")\n","\n","            train_loss_list.append(loss.item())\n","            train_loss_ce_list.append(loss_ce.item())\n","\n","            \n","            if iter_num % 20 == 0:\n","\n","              # test_loss, test_loss_ce = test()\n","\n","              # test_loss_list.append(test_loss.item())\n","              # test_loss_ce_list.append(test_loss_ce.item())\n","\n","              # Whats this?\n","              image = image_batch[1, 0:1, :, :]\n","              image = (image - image.min()) / (image.max() - image.min())\n","              outputs = torch.argmax(torch.softmax(outputs, dim=1), dim=1, keepdim=True)\n","              labs = label_batch[1, ...].unsqueeze(0) * 50\n","\n","    iterator.close()\n","    print(\"Training Finished!\")"],"metadata":{"id":"wnUEH27W-2K-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def test():\n","    model.eval()\n","\n","    ce_loss = CrossEntropyLoss()\n","    dice_loss = DiceLoss(num_classes)\n","\n","    loss_ce_list = torch.tensor([]).cuda()\n","    loss_list = torch.tensor([]).cuda()\n","\n","    for i_batch, sampled_batch in tqdm(enumerate(testloader)):\n","\n","        image_batch, label_batch = sampled_batch['image'].unsqueeze(1), sampled_batch['label']\n","        image_batch, label_batch = image_batch.cuda(), label_batch.cuda()\n","        outputs = model(image_batch)\n","        loss_ce = ce_loss(outputs, label_batch[:].long())\n","        loss_dice = dice_loss(outputs, label_batch, softmax=True)\n","        \n","        loss = 0.5 * loss_ce + 0.5 * loss_dice\n","\n","        loss_ce_list = torch.cat((loss_ce_list,loss_ce.unsqueeze(0)))\n","        loss_list = torch.cat((loss_list,loss.unsqueeze(0)))\n","\n","    mean_loss = torch.mean(loss_list)\n","    mean_ce = torch.mean(loss_ce_list)\n","    \n","    print(f\"Testing performance in best val model: mean_loss : {mean_loss} mean_ce : {mean_ce}\")\n","    print(\"Testing Finished!\")\n","\n","    return mean_loss, mean_ce"],"metadata":{"id":"NCS5ngvoH2ex"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Set random seeds for reproducibility\n","random.seed(rand_seed)\n","np.random.seed(rand_seed)\n","torch.manual_seed(rand_seed)\n","torch.cuda.manual_seed(rand_seed)\n","\n","config_vit = CONFIGS_ViT_seg[vit_name]\n","config_vit.n_classes = num_classes\n","config_vit.n_skip = n_skip\n","if vit_name.find('R50') != -1:\n","    config_vit.patches.grid = (int(img_size / vit_patches_size), int(img_size / vit_patches_size))\n","\n","dino_weights = torch.load(models_path+'dino_vitbase16_pretrain.pth')\n","res_weights = np.load(config_vit.pretrained_path)\n","\n","model = ViT_seg(config_vit, img_size=img_size, num_classes=config_vit.n_classes).cuda()\n","model.load_from_dino(res_weights=res_weights, weights=dino_weights)"],"metadata":{"id":"fsqPvKX-UfA2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_sartorius()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NzG-M2s3ub7m","outputId":"d17e5124-bce9-4fed-8c54-235a6de2094f","executionInfo":{"status":"ok","timestamp":1644514428406,"user_tz":-120,"elapsed":4333787,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["240 iterations per epoch. 240 max iterations.\n"]},{"output_type":"stream","name":"stderr","text":["\r  0%|                                           | 0/1 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["iteration 1 : loss : 0.5003925561904907, loss_ce: 0.5763699412345886\n","iteration 2 : loss : 0.487092524766922, loss_ce: 0.5454503893852234\n","iteration 3 : loss : 0.4657514691352844, loss_ce: 0.4840787351131439\n","iteration 4 : loss : 0.4282374978065491, loss_ce: 0.4518726170063019\n","iteration 5 : loss : 0.41654789447784424, loss_ce: 0.455025315284729\n","iteration 6 : loss : 0.3894397020339966, loss_ce: 0.38971251249313354\n","iteration 7 : loss : 0.3625774085521698, loss_ce: 0.3341566324234009\n","iteration 8 : loss : 0.3887001872062683, loss_ce: 0.3870998024940491\n","iteration 9 : loss : 0.31857967376708984, loss_ce: 0.2463006228208542\n","iteration 10 : loss : 0.3438921570777893, loss_ce: 0.2979893386363983\n","iteration 11 : loss : 0.3428352475166321, loss_ce: 0.2951553761959076\n","iteration 12 : loss : 0.38990044593811035, loss_ce: 0.3892517685890198\n","iteration 13 : loss : 0.31542128324508667, loss_ce: 0.2639496922492981\n","iteration 14 : loss : 0.33667439222335815, loss_ce: 0.30704405903816223\n","iteration 15 : loss : 0.3408548831939697, loss_ce: 0.31797975301742554\n","iteration 16 : loss : 0.31762999296188354, loss_ce: 0.2976709306240082\n","iteration 17 : loss : 0.3042486608028412, loss_ce: 0.2969557046890259\n","iteration 18 : loss : 0.28830936551094055, loss_ce: 0.2675466239452362\n","iteration 19 : loss : 0.28318536281585693, loss_ce: 0.2742649018764496\n","iteration 20 : loss : 0.2756272554397583, loss_ce: 0.2549798786640167\n","iteration 21 : loss : 0.2864867150783539, loss_ce: 0.2732044756412506\n","iteration 22 : loss : 0.2567649781703949, loss_ce: 0.2474997490644455\n","iteration 23 : loss : 0.25574755668640137, loss_ce: 0.2226163148880005\n","iteration 24 : loss : 0.24183537065982819, loss_ce: 0.20222151279449463\n","iteration 25 : loss : 0.26003021001815796, loss_ce: 0.248117133975029\n","iteration 26 : loss : 0.24290135502815247, loss_ce: 0.2081928849220276\n","iteration 27 : loss : 0.25274473428726196, loss_ce: 0.2214970737695694\n","iteration 28 : loss : 0.2676096558570862, loss_ce: 0.25043344497680664\n","iteration 29 : loss : 0.28032639622688293, loss_ce: 0.27971750497817993\n","iteration 30 : loss : 0.23413315415382385, loss_ce: 0.20481570065021515\n","iteration 31 : loss : 0.28167209029197693, loss_ce: 0.27930545806884766\n","iteration 32 : loss : 0.25160330533981323, loss_ce: 0.2341596633195877\n","iteration 33 : loss : 0.22196398675441742, loss_ce: 0.18449926376342773\n","iteration 34 : loss : 0.2596439719200134, loss_ce: 0.2490113228559494\n","iteration 35 : loss : 0.24540331959724426, loss_ce: 0.22718018293380737\n","iteration 36 : loss : 0.22844326496124268, loss_ce: 0.20693521201610565\n","iteration 37 : loss : 0.21503233909606934, loss_ce: 0.1807367503643036\n","iteration 38 : loss : 0.2405112087726593, loss_ce: 0.22768868505954742\n","iteration 39 : loss : 0.2249462902545929, loss_ce: 0.19789431989192963\n","iteration 40 : loss : 0.23434226214885712, loss_ce: 0.21033644676208496\n","iteration 41 : loss : 0.23154233396053314, loss_ce: 0.21096986532211304\n","iteration 42 : loss : 0.20943742990493774, loss_ce: 0.18152351677417755\n","iteration 43 : loss : 0.2138313353061676, loss_ce: 0.18473143875598907\n","iteration 44 : loss : 0.2283729612827301, loss_ce: 0.20407865941524506\n","iteration 45 : loss : 0.23785161972045898, loss_ce: 0.21094688773155212\n","iteration 46 : loss : 0.2145279049873352, loss_ce: 0.1877729594707489\n","iteration 47 : loss : 0.20517560839653015, loss_ce: 0.16562329232692719\n","iteration 48 : loss : 0.23272401094436646, loss_ce: 0.2182852178812027\n","iteration 49 : loss : 0.2237388789653778, loss_ce: 0.2063320428133011\n","iteration 50 : loss : 0.2703251540660858, loss_ce: 0.28297317028045654\n","iteration 51 : loss : 0.27762824296951294, loss_ce: 0.2856006622314453\n","iteration 52 : loss : 0.2105085253715515, loss_ce: 0.18700681626796722\n","iteration 53 : loss : 0.20183783769607544, loss_ce: 0.17455457150936127\n","iteration 54 : loss : 0.246684730052948, loss_ce: 0.2406381070613861\n","iteration 55 : loss : 0.24862666428089142, loss_ce: 0.23480042815208435\n","iteration 56 : loss : 0.2278977632522583, loss_ce: 0.2099016159772873\n","iteration 57 : loss : 0.20635747909545898, loss_ce: 0.1796548217535019\n","iteration 58 : loss : 0.2381668984889984, loss_ce: 0.23824788630008698\n","iteration 59 : loss : 0.2339693009853363, loss_ce: 0.24295495450496674\n","iteration 60 : loss : 0.21942263841629028, loss_ce: 0.18808625638484955\n","iteration 61 : loss : 0.21867018938064575, loss_ce: 0.2183864265680313\n","iteration 62 : loss : 0.23501521348953247, loss_ce: 0.22882483899593353\n","iteration 63 : loss : 0.20744934678077698, loss_ce: 0.1823110431432724\n","iteration 64 : loss : 0.23314273357391357, loss_ce: 0.21273480355739594\n","iteration 65 : loss : 0.20555317401885986, loss_ce: 0.19079311192035675\n","iteration 66 : loss : 0.25795161724090576, loss_ce: 0.2574569880962372\n","iteration 67 : loss : 0.22404366731643677, loss_ce: 0.2135736495256424\n","iteration 68 : loss : 0.23228275775909424, loss_ce: 0.2284783124923706\n","iteration 69 : loss : 0.23205769062042236, loss_ce: 0.23762139678001404\n","iteration 70 : loss : 0.20764632523059845, loss_ce: 0.17875126004219055\n","iteration 71 : loss : 0.21945035457611084, loss_ce: 0.21891704201698303\n","iteration 72 : loss : 0.2016533464193344, loss_ce: 0.191096693277359\n","iteration 73 : loss : 0.20974332094192505, loss_ce: 0.1587792932987213\n","iteration 74 : loss : 0.20068660378456116, loss_ce: 0.16864947974681854\n","iteration 75 : loss : 0.20670050382614136, loss_ce: 0.1820654273033142\n","iteration 76 : loss : 0.2057051956653595, loss_ce: 0.18742883205413818\n","iteration 77 : loss : 0.21919378638267517, loss_ce: 0.200371652841568\n","iteration 78 : loss : 0.18734587728977203, loss_ce: 0.1430334448814392\n","iteration 79 : loss : 0.23153093457221985, loss_ce: 0.2272436022758484\n","iteration 80 : loss : 0.2370726764202118, loss_ce: 0.2265077382326126\n","iteration 81 : loss : 0.1896820217370987, loss_ce: 0.1588999629020691\n","iteration 82 : loss : 0.22478950023651123, loss_ce: 0.2265235334634781\n","iteration 83 : loss : 0.2045246958732605, loss_ce: 0.17531706392765045\n","iteration 84 : loss : 0.18049117922782898, loss_ce: 0.13476668298244476\n","iteration 85 : loss : 0.19273921847343445, loss_ce: 0.17001931369304657\n","iteration 86 : loss : 0.2062373161315918, loss_ce: 0.19168497622013092\n","iteration 87 : loss : 0.24339938163757324, loss_ce: 0.24300876259803772\n","iteration 88 : loss : 0.201109379529953, loss_ce: 0.1911143809556961\n","iteration 89 : loss : 0.18671314418315887, loss_ce: 0.15539640188217163\n","iteration 90 : loss : 0.18493226170539856, loss_ce: 0.15111379325389862\n","iteration 91 : loss : 0.21275468170642853, loss_ce: 0.20797139406204224\n","iteration 92 : loss : 0.2187226265668869, loss_ce: 0.20896458625793457\n","iteration 93 : loss : 0.1888684630393982, loss_ce: 0.1446799486875534\n","iteration 94 : loss : 0.2563348710536957, loss_ce: 0.27123311161994934\n","iteration 95 : loss : 0.21802356839179993, loss_ce: 0.2042849361896515\n","iteration 96 : loss : 0.20514491200447083, loss_ce: 0.19365562498569489\n","iteration 97 : loss : 0.17634660005569458, loss_ce: 0.14324809610843658\n","iteration 98 : loss : 0.18240652978420258, loss_ce: 0.15576568245887756\n","iteration 99 : loss : 0.26540565490722656, loss_ce: 0.28502756357192993\n","iteration 100 : loss : 0.20028537511825562, loss_ce: 0.20098252594470978\n","iteration 101 : loss : 0.19209131598472595, loss_ce: 0.16868196427822113\n","iteration 102 : loss : 0.2150600552558899, loss_ce: 0.2055482119321823\n","iteration 103 : loss : 0.2265130877494812, loss_ce: 0.2286338061094284\n","iteration 104 : loss : 0.19387923181056976, loss_ce: 0.1573604941368103\n","iteration 105 : loss : 0.16634193062782288, loss_ce: 0.14636234939098358\n","iteration 106 : loss : 0.18145427107810974, loss_ce: 0.16024978458881378\n","iteration 107 : loss : 0.21463093161582947, loss_ce: 0.20728939771652222\n","iteration 108 : loss : 0.2351161241531372, loss_ce: 0.2295578271150589\n","iteration 109 : loss : 0.19878610968589783, loss_ce: 0.17627419531345367\n","iteration 110 : loss : 0.21948988735675812, loss_ce: 0.21050268411636353\n","iteration 111 : loss : 0.21562644839286804, loss_ce: 0.20657946169376373\n","iteration 112 : loss : 0.1803753823041916, loss_ce: 0.1527857780456543\n","iteration 113 : loss : 0.24172402918338776, loss_ce: 0.25457653403282166\n","iteration 114 : loss : 0.18264463543891907, loss_ce: 0.1604689061641693\n","iteration 115 : loss : 0.19482886791229248, loss_ce: 0.14890708029270172\n","iteration 116 : loss : 0.20265623927116394, loss_ce: 0.20175181329250336\n","iteration 117 : loss : 0.16279123723506927, loss_ce: 0.14067623019218445\n","iteration 118 : loss : 0.19170868396759033, loss_ce: 0.18334144353866577\n","iteration 119 : loss : 0.18038251996040344, loss_ce: 0.13767699897289276\n","iteration 120 : loss : 0.1967426836490631, loss_ce: 0.1830848604440689\n","iteration 121 : loss : 0.20750856399536133, loss_ce: 0.18439696729183197\n","iteration 122 : loss : 0.19675546884536743, loss_ce: 0.1781804859638214\n","iteration 123 : loss : 0.22382640838623047, loss_ce: 0.21823635697364807\n","iteration 124 : loss : 0.20605364441871643, loss_ce: 0.1923113912343979\n","iteration 125 : loss : 0.22984331846237183, loss_ce: 0.22687983512878418\n","iteration 126 : loss : 0.22078067064285278, loss_ce: 0.2294156551361084\n","iteration 127 : loss : 0.20768672227859497, loss_ce: 0.1972859799861908\n","iteration 128 : loss : 0.19725391268730164, loss_ce: 0.17870143055915833\n","iteration 129 : loss : 0.20162510871887207, loss_ce: 0.20364119112491608\n","iteration 130 : loss : 0.17430827021598816, loss_ce: 0.1577126830816269\n","iteration 131 : loss : 0.20031023025512695, loss_ce: 0.18160565197467804\n","iteration 132 : loss : 0.20241868495941162, loss_ce: 0.20967207849025726\n","iteration 133 : loss : 0.18469631671905518, loss_ce: 0.1593506783246994\n","iteration 134 : loss : 0.19292312860488892, loss_ce: 0.1708298921585083\n","iteration 135 : loss : 0.17360250651836395, loss_ce: 0.16277769207954407\n","iteration 136 : loss : 0.215279221534729, loss_ce: 0.22342509031295776\n","iteration 137 : loss : 0.19680894911289215, loss_ce: 0.18218550086021423\n","iteration 138 : loss : 0.19349074363708496, loss_ce: 0.18375016748905182\n","iteration 139 : loss : 0.21927636861801147, loss_ce: 0.22779463231563568\n","iteration 140 : loss : 0.19014759361743927, loss_ce: 0.16778001189231873\n","iteration 141 : loss : 0.19287504255771637, loss_ce: 0.18067696690559387\n","iteration 142 : loss : 0.165558323264122, loss_ce: 0.14536264538764954\n","iteration 143 : loss : 0.19163477420806885, loss_ce: 0.17190919816493988\n","iteration 144 : loss : 0.1960938274860382, loss_ce: 0.1803247481584549\n","iteration 145 : loss : 0.18996351957321167, loss_ce: 0.17589308321475983\n","iteration 146 : loss : 0.1962343156337738, loss_ce: 0.1749904900789261\n","iteration 147 : loss : 0.2036197930574417, loss_ce: 0.21455782651901245\n","iteration 148 : loss : 0.18422892689704895, loss_ce: 0.15545646846294403\n","iteration 149 : loss : 0.19812488555908203, loss_ce: 0.1997811496257782\n","iteration 150 : loss : 0.1905716061592102, loss_ce: 0.1711968630552292\n","iteration 151 : loss : 0.22041714191436768, loss_ce: 0.23178257048130035\n","iteration 152 : loss : 0.16896222531795502, loss_ce: 0.13519731163978577\n","iteration 153 : loss : 0.18393850326538086, loss_ce: 0.11938709765672684\n","iteration 154 : loss : 0.19772237539291382, loss_ce: 0.19943363964557648\n","iteration 155 : loss : 0.17020779848098755, loss_ce: 0.14811716973781586\n","iteration 156 : loss : 0.15195338428020477, loss_ce: 0.12175621837377548\n","iteration 157 : loss : 0.2155049741268158, loss_ce: 0.21197883784770966\n","iteration 158 : loss : 0.18221496045589447, loss_ce: 0.15652358531951904\n","iteration 159 : loss : 0.16239449381828308, loss_ce: 0.13046632707118988\n","iteration 160 : loss : 0.1649315357208252, loss_ce: 0.14010508358478546\n","iteration 161 : loss : 0.18016329407691956, loss_ce: 0.17570891976356506\n","iteration 162 : loss : 0.19398728013038635, loss_ce: 0.19153526425361633\n","iteration 163 : loss : 0.1902657151222229, loss_ce: 0.17934167385101318\n","iteration 164 : loss : 0.1762724071741104, loss_ce: 0.16495895385742188\n","iteration 165 : loss : 0.21077442169189453, loss_ce: 0.20603984594345093\n","iteration 166 : loss : 0.16161495447158813, loss_ce: 0.13677668571472168\n","iteration 167 : loss : 0.21104034781455994, loss_ce: 0.21920855343341827\n","iteration 168 : loss : 0.21465998888015747, loss_ce: 0.21801802515983582\n","iteration 169 : loss : 0.18550339341163635, loss_ce: 0.17824365198612213\n","iteration 170 : loss : 0.16032814979553223, loss_ce: 0.12964056432247162\n","iteration 171 : loss : 0.18882925808429718, loss_ce: 0.1850687861442566\n","iteration 172 : loss : 0.17511841654777527, loss_ce: 0.1366027146577835\n","iteration 173 : loss : 0.1954725682735443, loss_ce: 0.19370104372501373\n","iteration 174 : loss : 0.1868397742509842, loss_ce: 0.19083252549171448\n","iteration 175 : loss : 0.17747098207473755, loss_ce: 0.14948193728923798\n","iteration 176 : loss : 0.18270669877529144, loss_ce: 0.17873704433441162\n","iteration 177 : loss : 0.17108237743377686, loss_ce: 0.14367930591106415\n","iteration 178 : loss : 0.18246829509735107, loss_ce: 0.18046535551548004\n","iteration 179 : loss : 0.17666715383529663, loss_ce: 0.1629580557346344\n","iteration 180 : loss : 0.1644747108221054, loss_ce: 0.1345003843307495\n","iteration 181 : loss : 0.18017466366291046, loss_ce: 0.15744751691818237\n","iteration 182 : loss : 0.1750565767288208, loss_ce: 0.1583392471075058\n","iteration 183 : loss : 0.203883096575737, loss_ce: 0.1938866674900055\n","iteration 184 : loss : 0.1837996244430542, loss_ce: 0.18498273193836212\n","iteration 185 : loss : 0.14622247219085693, loss_ce: 0.12252409011125565\n","iteration 186 : loss : 0.18980847299098969, loss_ce: 0.17124006152153015\n","iteration 187 : loss : 0.1691848635673523, loss_ce: 0.13899970054626465\n","iteration 188 : loss : 0.15439572930335999, loss_ce: 0.12075970321893692\n","iteration 189 : loss : 0.18176701664924622, loss_ce: 0.16545487940311432\n","iteration 190 : loss : 0.16276168823242188, loss_ce: 0.14040882885456085\n","iteration 191 : loss : 0.1548132300376892, loss_ce: 0.1289072036743164\n","iteration 192 : loss : 0.17043551802635193, loss_ce: 0.13148462772369385\n","iteration 193 : loss : 0.22477570176124573, loss_ce: 0.23921875655651093\n","iteration 194 : loss : 0.2024036943912506, loss_ce: 0.20184798538684845\n","iteration 195 : loss : 0.21735209226608276, loss_ce: 0.23147530853748322\n","iteration 196 : loss : 0.1917456090450287, loss_ce: 0.19211097061634064\n","iteration 197 : loss : 0.1614076793193817, loss_ce: 0.14638637006282806\n","iteration 198 : loss : 0.1807158887386322, loss_ce: 0.17139068245887756\n","iteration 199 : loss : 0.18635228276252747, loss_ce: 0.16403402388095856\n","iteration 200 : loss : 0.20792892575263977, loss_ce: 0.22709806263446808\n","iteration 201 : loss : 0.1804315596818924, loss_ce: 0.1784517765045166\n","iteration 202 : loss : 0.17606401443481445, loss_ce: 0.15616831183433533\n","iteration 203 : loss : 0.19459357857704163, loss_ce: 0.20190861821174622\n","iteration 204 : loss : 0.22975853085517883, loss_ce: 0.25054192543029785\n","iteration 205 : loss : 0.16715054214000702, loss_ce: 0.1348063349723816\n","iteration 206 : loss : 0.185114786028862, loss_ce: 0.1835656464099884\n","iteration 207 : loss : 0.17249415814876556, loss_ce: 0.15946272015571594\n","iteration 208 : loss : 0.1637081652879715, loss_ce: 0.144869863986969\n","iteration 209 : loss : 0.1564534604549408, loss_ce: 0.13566894829273224\n","iteration 210 : loss : 0.17311351001262665, loss_ce: 0.1472354233264923\n","iteration 211 : loss : 0.17201188206672668, loss_ce: 0.16217301785945892\n","iteration 212 : loss : 0.1779714971780777, loss_ce: 0.18027934432029724\n","iteration 213 : loss : 0.18552756309509277, loss_ce: 0.1818506419658661\n","iteration 214 : loss : 0.17015564441680908, loss_ce: 0.16112564504146576\n","iteration 215 : loss : 0.19774049520492554, loss_ce: 0.1842198669910431\n","iteration 216 : loss : 0.16680142283439636, loss_ce: 0.1482723206281662\n","iteration 217 : loss : 0.16068509221076965, loss_ce: 0.11490124464035034\n","iteration 218 : loss : 0.197096586227417, loss_ce: 0.189849391579628\n","iteration 219 : loss : 0.16883069276809692, loss_ce: 0.13766807317733765\n","iteration 220 : loss : 0.19980034232139587, loss_ce: 0.19734854996204376\n","iteration 221 : loss : 0.17539790272712708, loss_ce: 0.16468553245067596\n","iteration 222 : loss : 0.1633274257183075, loss_ce: 0.13876603543758392\n","iteration 223 : loss : 0.1916123926639557, loss_ce: 0.19807443022727966\n","iteration 224 : loss : 0.1987098902463913, loss_ce: 0.21153903007507324\n","iteration 225 : loss : 0.15588292479515076, loss_ce: 0.12340524792671204\n","iteration 226 : loss : 0.1646672636270523, loss_ce: 0.1473340094089508\n","iteration 227 : loss : 0.19169554114341736, loss_ce: 0.18255984783172607\n","iteration 228 : loss : 0.15695393085479736, loss_ce: 0.1276787370443344\n","iteration 229 : loss : 0.16932281851768494, loss_ce: 0.14200641214847565\n","iteration 230 : loss : 0.1639702320098877, loss_ce: 0.15545149147510529\n","iteration 231 : loss : 0.18248037993907928, loss_ce: 0.17656704783439636\n","iteration 232 : loss : 0.18291696906089783, loss_ce: 0.17726941406726837\n","iteration 233 : loss : 0.1758829951286316, loss_ce: 0.1662338376045227\n","iteration 234 : loss : 0.1720075011253357, loss_ce: 0.166974276304245\n","iteration 235 : loss : 0.19661518931388855, loss_ce: 0.19437970221042633\n","iteration 236 : loss : 0.1754637211561203, loss_ce: 0.17528483271598816\n","iteration 237 : loss : 0.16695283353328705, loss_ce: 0.16397669911384583\n","iteration 238 : loss : 0.17952896654605865, loss_ce: 0.1760222315788269\n","iteration 239 : loss : 0.21443212032318115, loss_ce: 0.23284703493118286\n"]},{"output_type":"stream","name":"stderr","text":["100%|███████████████████████████████| 1/1 [1:12:13<00:00, 4333.60s/it]"]},{"output_type":"stream","name":"stdout","text":["iteration 240 : loss : 0.1639898717403412, loss_ce: 0.14752882719039917\n","Training Finished!\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"code","source":["from google.colab.patches import cv2_imshow"],"metadata":{"id":"rgmx5woDdr4B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["checkloader = DataLoader(db_train, batch_size=1, shuffle=True, num_workers=1, pin_memory=True,\n","                        worker_init_fn=worker_init_fn)\n","\n","for image_data in checkloader:  \n","    image = image_data['image']\n","    label = image_data['label']\n","\n","\n","    break\n","\n","image, label = image.cuda(), label.cuda()\n","\n","\n","label_prediction = model(image)"],"metadata":{"id":"yL21oOWxctEa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np_label = label.cpu().detach().numpy()\n","np_image = image.cpu().detach().numpy()\n","np_label_prediction = label_prediction.cpu().detach().numpy()\n","\n"],"metadata":{"id":"hAjtCAnxdaEN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cv2_imshow(np_image[0,0,:,:]*255)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"U6st4Zj2hSn0","executionInfo":{"status":"ok","timestamp":1644514458395,"user_tz":-120,"elapsed":664,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"8034af2b-c454-4064-fa03-f7b89882a356"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<PIL.Image.Image image mode=L size=224x224 at 0x7F6080DBA350>"]},"metadata":{}}]},{"cell_type":"code","source":["cv2_imshow(np_label[0,:,:]*255)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"6820NgSBiCFr","executionInfo":{"status":"ok","timestamp":1644514462000,"user_tz":-120,"elapsed":825,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"2ad55529-9847-4003-9111-3e377d49b3ad"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<PIL.Image.Image image mode=L size=224x224 at 0x7F6080D335D0>"]},"metadata":{}}]},{"cell_type":"code","source":["cv2_imshow((1-np_label_prediction[0,0,:,:])*255)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"p4dwXww6iCfz","executionInfo":{"status":"ok","timestamp":1644514468733,"user_tz":-120,"elapsed":499,"user":{"displayName":"Alon H.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06055109935183125095"}},"outputId":"12f3c581-25f4-4dba-a76d-8f87fd6ac4aa"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<PIL.Image.Image image mode=L size=224x224 at 0x7F6080D33150>"]},"metadata":{}}]}]}